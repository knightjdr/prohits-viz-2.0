// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Auto complete submit error should match snapshot 1`] = `
<TestForm
  input={
    Object {
      "change": [Function],
      "value": undefined,
    }
  }
  meta={
    Object {
      "error": "Error message",
      "touched": true,
      "warning": "",
    }
  }
  onSubmit={[Function]}
>
  <Form
    hideRequiredMark={false}
    layout="horizontal"
    onSubmit={[Function]}
    prefixCls="ant-form"
  >
    <form
      className="ant-form ant-form-horizontal"
      onSubmit={[Function]}
    >
      <CustomAutoComplete
        dataSource={Array []}
        handleSearch={[Function]}
        helpMessage="help"
        input={
          Object {
            "change": [Function],
            "value": undefined,
          }
        }
        label="Label"
        meta={
          Object {
            "error": "Error message",
            "touched": true,
            "warning": "",
          }
        }
        onChange={[Function]}
        onSelect={[Function]}
        placeHolder="Auto complete"
        style={
          Object {
            "backgroundColor": "#000",
          }
        }
      >
        <div
          className="customfield"
        >
          <FormItem
            className="customfield__form-item"
            colon={true}
            hasFeedback={false}
            help="Error message"
            label="Label"
            prefixCls="ant-form"
            validateStatus="error"
          >
            <Row
              className="ant-form-item ant-form-item-with-help customfield__form-item"
              gutter={0}
            >
              <div
                className="ant-row ant-form-item ant-form-item-with-help customfield__form-item"
              >
                <Col
                  className="ant-form-item-label"
                  key=".$label"
                >
                  <div
                    className="ant-form-item-label"
                  >
                    <label
                      className=""
                      htmlFor={null}
                      onClick={[Function]}
                      title="Label"
                    >
                      Label
                    </label>
                  </div>
                </Col>
                <Col
                  className="ant-form-item-control-wrapper"
                  key=".$wrapper"
                >
                  <div
                    className="ant-form-item-control-wrapper"
                  >
                    <div
                      className="ant-form-item-control has-error"
                    >
                      <span
                        className="ant-form-item-children"
                      >
                        <AutoComplete
                          choiceTransitionName="zoom"
                          dataSource={Array []}
                          filterOption={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onSearch={[Function]}
                          onSelect={[Function]}
                          optionLabelProp="children"
                          placeholder="Auto complete"
                          prefixCls="ant-select"
                          showSearch={false}
                          style={
                            Object {
                              "backgroundColor": "#000",
                            }
                          }
                          transitionName="slide-up"
                        >
                          <Select
                            choiceTransitionName="zoom"
                            className="ant-select-show-search ant-select-auto-complete"
                            dataSource={Array []}
                            filterOption={false}
                            getInputElement={[Function]}
                            mode="combobox"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionLabelProp="children"
                            placeholder="Auto complete"
                            prefixCls="ant-select"
                            showSearch={false}
                            style={
                              Object {
                                "backgroundColor": "#000",
                              }
                            }
                            transitionName="slide-up"
                          >
                            <LocaleReceiver
                              componentName="Select"
                              defaultLocale={
                                Object {
                                  "notFoundContent": "Not Found",
                                }
                              }
                            >
                              <Select
                                allowClear={false}
                                autoClearSearchValue={true}
                                backfill={false}
                                choiceTransitionName="zoom"
                                className="ant-select-show-search ant-select-auto-complete"
                                combobox={true}
                                dataSource={Array []}
                                defaultActiveFirstOption={true}
                                defaultOpen={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                filterOption={false}
                                getInputElement={[Function]}
                                labelInValue={false}
                                multiple={false}
                                notFoundContent={null}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDeselect={[Function]}
                                onFocus={[Function]}
                                onInputKeyDown={[Function]}
                                onSearch={[Function]}
                                onSelect={[Function]}
                                optionFilterProp="value"
                                optionLabelProp="children"
                                placeholder="Auto complete"
                                prefixCls="ant-select"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showArrow={true}
                                showSearch={false}
                                style={
                                  Object {
                                    "backgroundColor": "#000",
                                  }
                                }
                                tags={false}
                                tokenSeparators={Array []}
                                transitionName="slide-up"
                              >
                                <SelectTrigger
                                  combobox={true}
                                  defaultActiveFirstOption={true}
                                  dropdownMatchSelectWidth={true}
                                  dropdownMenuStyle={Object {}}
                                  dropdownStyle={Object {}}
                                  inputValue=""
                                  multiple={false}
                                  onDropdownVisibleChange={[Function]}
                                  onMenuDeselect={[Function]}
                                  onMenuSelect={[Function]}
                                  onPopupFocus={[Function]}
                                  options={Array []}
                                  prefixCls="ant-select"
                                  showAction={
                                    Array [
                                      "click",
                                    ]
                                  }
                                  showSearch={false}
                                  transitionName="slide-up"
                                  value={Array []}
                                  visible={false}
                                >
                                  <Trigger
                                    action={Array []}
                                    afterPopupVisibleChange={[Function]}
                                    blurDelay={0.15}
                                    builtinPlacements={
                                      Object {
                                        "bottomLeft": Object {
                                          "offset": Array [
                                            0,
                                            4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tl",
                                            "bl",
                                          ],
                                        },
                                        "topLeft": Object {
                                          "offset": Array [
                                            0,
                                            -4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "bl",
                                            "tl",
                                          ],
                                        },
                                      }
                                    }
                                    combobox={true}
                                    defaultActiveFirstOption={true}
                                    defaultPopupVisible={false}
                                    destroyPopupOnHide={false}
                                    dropdownMatchSelectWidth={true}
                                    dropdownMenuStyle={Object {}}
                                    dropdownStyle={Object {}}
                                    focusDelay={0}
                                    getDocument={[Function]}
                                    getPopupClassNameFromAlign={[Function]}
                                    hideAction={
                                      Array [
                                        "blur",
                                      ]
                                    }
                                    inputValue=""
                                    mask={false}
                                    maskClosable={true}
                                    mouseEnterDelay={0}
                                    mouseLeaveDelay={0.1}
                                    multiple={false}
                                    onDropdownVisibleChange={[Function]}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupAlign={[Function]}
                                    onPopupVisibleChange={[Function]}
                                    options={Array []}
                                    popup={
                                      <DropdownMenu
                                        backfillValue={undefined}
                                        defaultActiveFirstOption={true}
                                        dropdownMenuStyle={Object {}}
                                        firstActiveValue={undefined}
                                        inputValue=""
                                        menuItems={Array []}
                                        multiple={false}
                                        onMenuDeselect={[Function]}
                                        onMenuSelect={[Function]}
                                        onPopupFocus={[Function]}
                                        onPopupScroll={undefined}
                                        prefixCls="ant-select-dropdown"
                                        value={Array []}
                                        visible={false}
                                      />
                                    }
                                    popupAlign={Object {}}
                                    popupClassName="ant-select-dropdown--single"
                                    popupPlacement="bottomLeft"
                                    popupStyle={Object {}}
                                    popupTransitionName="slide-up"
                                    popupVisible={false}
                                    prefixCls="ant-select-dropdown"
                                    showAction={
                                      Array [
                                        "click",
                                      ]
                                    }
                                    showSearch={false}
                                    transitionName="slide-up"
                                    value={Array []}
                                    visible={false}
                                  >
                                    <div
                                      className="ant-select-show-search ant-select-auto-complete ant-select ant-select-combobox ant-select-enabled"
                                      key="trigger"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onTouchStart={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "#000",
                                        }
                                      }
                                    >
                                      <div
                                        aria-autocomplete="list"
                                        aria-expanded={false}
                                        aria-haspopup="true"
                                        className="ant-select-selection
                                                  ant-select-selection--single"
                                        key="selection"
                                        role="combobox"
                                      >
                                        <div
                                          className="ant-select-selection__rendered"
                                        >
                                          <div
                                            className="ant-select-selection__placeholder"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "WebkitUserSelect": "none",
                                                "display": "block",
                                                "userSelect": "none",
                                              }
                                            }
                                            unselectable="on"
                                          >
                                            Auto complete
                                          </div>
                                          <ul>
                                            <li
                                              className="ant-select-search ant-select-search--inline"
                                              key="__input"
                                            >
                                              <div
                                                className="ant-select-search__field__wrap"
                                              >
                                                <InputElement
                                                  className="ant-select-search__field"
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  prefixCls="ant-input"
                                                  type="text"
                                                  value=""
                                                >
                                                  <Input
                                                    className="ant-select-search__field"
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    prefixCls="ant-input"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="ant-input ant-select-search__field"
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </Input>
                                                </InputElement>
                                                <span
                                                  className="ant-select-search__field__mirror"
                                                >
                                                   
                                                </span>
                                              </div>
                                            </li>
                                          </ul>
                                        </div>
                                        <span
                                          className="ant-select-arrow"
                                          key="arrow"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "WebkitUserSelect": "none",
                                              "userSelect": "none",
                                            }
                                          }
                                          unselectable="on"
                                        >
                                          <b />
                                        </span>
                                      </div>
                                    </div>
                                  </Trigger>
                                </SelectTrigger>
                              </Select>
                            </LocaleReceiver>
                          </Select>
                        </AutoComplete>
                      </span>
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="help"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      >
                        <AnimateChild
                          animation={Object {}}
                          key="help"
                          transitionAppear={true}
                          transitionEnter={true}
                          transitionLeave={true}
                          transitionName="show-help"
                        >
                          <div
                            className="ant-form-explain"
                            key="help"
                          >
                            Error message
                          </div>
                        </AnimateChild>
                      </Animate>
                    </div>
                  </div>
                </Col>
              </div>
            </Row>
          </FormItem>
          <FontAwesomeIcon$1
            border={false}
            className="customfield__help"
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  448,
                  512,
                  Array [],
                  "f2fd",
                  "M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 430c-25.365 0-46-20.636-46-46 0-25.365 20.635-46 46-46s46 20.635 46 46c0 25.364-20.635 46-46 46zm40-131.333V300c0 6.627-5.373 12-12 12h-56c-6.627 0-12-5.373-12-12v-4c0-41.059 31.128-57.472 54.652-70.66 20.171-11.309 32.534-19 32.534-33.976 0-19.81-25.269-32.958-45.698-32.958-27.19 0-39.438 13.139-57.303 35.797-4.045 5.13-11.46 6.069-16.665 2.122l-34.699-26.31c-5.068-3.843-6.251-10.972-2.715-16.258C141.4 112.957 176.158 90 230.655 90c56.366 0 116.531 43.998 116.531 102 0 77.02-83.186 78.205-83.186 106.667z",
                ],
                "iconName": "question-square",
                "prefix": "fas",
              }
            }
            listItem={false}
            mask={null}
            name=""
            onClick={[Function]}
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={false}
            symbol={false}
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-square fa-w-14 fa-2x customfield__help"
              data-icon="question-square"
              data-prefix="fas"
              onClick={[Function]}
              role="img"
              style={Object {}}
              viewBox="0 0 448 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 430c-25.365 0-46-20.636-46-46 0-25.365 20.635-46 46-46s46 20.635 46 46c0 25.364-20.635 46-46 46zm40-131.333V300c0 6.627-5.373 12-12 12h-56c-6.627 0-12-5.373-12-12v-4c0-41.059 31.128-57.472 54.652-70.66 20.171-11.309 32.534-19 32.534-33.976 0-19.81-25.269-32.958-45.698-32.958-27.19 0-39.438 13.139-57.303 35.797-4.045 5.13-11.46 6.069-16.665 2.122l-34.699-26.31c-5.068-3.843-6.251-10.972-2.715-16.258C141.4 112.957 176.158 90 230.655 90c56.366 0 116.531 43.998 116.531 102 0 77.02-83.186 78.205-83.186 106.667z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon$1>
        </div>
      </CustomAutoComplete>
      <button
        type="submit"
      />
    </form>
  </Form>
</TestForm>
`;

exports[`Auto complete with no help message should match snapshot 1`] = `
<TestForm
  input={
    Object {
      "onChange": [Function],
      "value": undefined,
    }
  }
  meta={
    Object {
      "error": "",
      "touched": false,
      "warning": "",
    }
  }
  onSubmit={[Function]}
>
  <Form
    hideRequiredMark={false}
    layout="horizontal"
    onSubmit={[Function]}
    prefixCls="ant-form"
  >
    <form
      className="ant-form ant-form-horizontal"
      onSubmit={[Function]}
    >
      <CustomAutoComplete
        dataSource={Array []}
        handleSearch={[Function]}
        helpMessage=""
        input={
          Object {
            "onChange": [Function],
            "value": undefined,
          }
        }
        label="Label"
        meta={
          Object {
            "error": "",
            "touched": false,
            "warning": "",
          }
        }
        onChange={[Function]}
        onSelect={[Function]}
        placeHolder="Auto complete"
        style={
          Object {
            "backgroundColor": "#000",
          }
        }
      >
        <div
          className="customfield"
        >
          <FormItem
            className="customfield__form-item"
            colon={true}
            hasFeedback={false}
            help=""
            label="Label"
            prefixCls="ant-form"
            validateStatus=""
          >
            <Row
              className="ant-form-item customfield__form-item"
              gutter={0}
            >
              <div
                className="ant-row ant-form-item customfield__form-item"
              >
                <Col
                  className="ant-form-item-label"
                  key=".$label"
                >
                  <div
                    className="ant-form-item-label"
                  >
                    <label
                      className=""
                      htmlFor={null}
                      onClick={[Function]}
                      title="Label"
                    >
                      Label
                    </label>
                  </div>
                </Col>
                <Col
                  className="ant-form-item-control-wrapper"
                  key=".$wrapper"
                >
                  <div
                    className="ant-form-item-control-wrapper"
                  >
                    <div
                      className="ant-form-item-control"
                    >
                      <span
                        className="ant-form-item-children"
                      >
                        <AutoComplete
                          choiceTransitionName="zoom"
                          dataSource={Array []}
                          filterOption={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onSearch={[Function]}
                          onSelect={[Function]}
                          optionLabelProp="children"
                          placeholder="Auto complete"
                          prefixCls="ant-select"
                          showSearch={false}
                          style={
                            Object {
                              "backgroundColor": "#000",
                            }
                          }
                          transitionName="slide-up"
                        >
                          <Select
                            choiceTransitionName="zoom"
                            className="ant-select-show-search ant-select-auto-complete"
                            dataSource={Array []}
                            filterOption={false}
                            getInputElement={[Function]}
                            mode="combobox"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionLabelProp="children"
                            placeholder="Auto complete"
                            prefixCls="ant-select"
                            showSearch={false}
                            style={
                              Object {
                                "backgroundColor": "#000",
                              }
                            }
                            transitionName="slide-up"
                          >
                            <LocaleReceiver
                              componentName="Select"
                              defaultLocale={
                                Object {
                                  "notFoundContent": "Not Found",
                                }
                              }
                            >
                              <Select
                                allowClear={false}
                                autoClearSearchValue={true}
                                backfill={false}
                                choiceTransitionName="zoom"
                                className="ant-select-show-search ant-select-auto-complete"
                                combobox={true}
                                dataSource={Array []}
                                defaultActiveFirstOption={true}
                                defaultOpen={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                filterOption={false}
                                getInputElement={[Function]}
                                labelInValue={false}
                                multiple={false}
                                notFoundContent={null}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDeselect={[Function]}
                                onFocus={[Function]}
                                onInputKeyDown={[Function]}
                                onSearch={[Function]}
                                onSelect={[Function]}
                                optionFilterProp="value"
                                optionLabelProp="children"
                                placeholder="Auto complete"
                                prefixCls="ant-select"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showArrow={true}
                                showSearch={false}
                                style={
                                  Object {
                                    "backgroundColor": "#000",
                                  }
                                }
                                tags={false}
                                tokenSeparators={Array []}
                                transitionName="slide-up"
                              >
                                <SelectTrigger
                                  combobox={true}
                                  defaultActiveFirstOption={true}
                                  dropdownMatchSelectWidth={true}
                                  dropdownMenuStyle={Object {}}
                                  dropdownStyle={Object {}}
                                  inputValue=""
                                  multiple={false}
                                  onDropdownVisibleChange={[Function]}
                                  onMenuDeselect={[Function]}
                                  onMenuSelect={[Function]}
                                  onPopupFocus={[Function]}
                                  options={Array []}
                                  prefixCls="ant-select"
                                  showAction={
                                    Array [
                                      "click",
                                    ]
                                  }
                                  showSearch={false}
                                  transitionName="slide-up"
                                  value={Array []}
                                  visible={false}
                                >
                                  <Trigger
                                    action={Array []}
                                    afterPopupVisibleChange={[Function]}
                                    blurDelay={0.15}
                                    builtinPlacements={
                                      Object {
                                        "bottomLeft": Object {
                                          "offset": Array [
                                            0,
                                            4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tl",
                                            "bl",
                                          ],
                                        },
                                        "topLeft": Object {
                                          "offset": Array [
                                            0,
                                            -4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "bl",
                                            "tl",
                                          ],
                                        },
                                      }
                                    }
                                    combobox={true}
                                    defaultActiveFirstOption={true}
                                    defaultPopupVisible={false}
                                    destroyPopupOnHide={false}
                                    dropdownMatchSelectWidth={true}
                                    dropdownMenuStyle={Object {}}
                                    dropdownStyle={Object {}}
                                    focusDelay={0}
                                    getDocument={[Function]}
                                    getPopupClassNameFromAlign={[Function]}
                                    hideAction={
                                      Array [
                                        "blur",
                                      ]
                                    }
                                    inputValue=""
                                    mask={false}
                                    maskClosable={true}
                                    mouseEnterDelay={0}
                                    mouseLeaveDelay={0.1}
                                    multiple={false}
                                    onDropdownVisibleChange={[Function]}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupAlign={[Function]}
                                    onPopupVisibleChange={[Function]}
                                    options={Array []}
                                    popup={
                                      <DropdownMenu
                                        backfillValue={undefined}
                                        defaultActiveFirstOption={true}
                                        dropdownMenuStyle={Object {}}
                                        firstActiveValue={undefined}
                                        inputValue=""
                                        menuItems={Array []}
                                        multiple={false}
                                        onMenuDeselect={[Function]}
                                        onMenuSelect={[Function]}
                                        onPopupFocus={[Function]}
                                        onPopupScroll={undefined}
                                        prefixCls="ant-select-dropdown"
                                        value={Array []}
                                        visible={false}
                                      />
                                    }
                                    popupAlign={Object {}}
                                    popupClassName="ant-select-dropdown--single"
                                    popupPlacement="bottomLeft"
                                    popupStyle={Object {}}
                                    popupTransitionName="slide-up"
                                    popupVisible={false}
                                    prefixCls="ant-select-dropdown"
                                    showAction={
                                      Array [
                                        "click",
                                      ]
                                    }
                                    showSearch={false}
                                    transitionName="slide-up"
                                    value={Array []}
                                    visible={false}
                                  >
                                    <div
                                      className="ant-select-show-search ant-select-auto-complete ant-select ant-select-combobox ant-select-enabled"
                                      key="trigger"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onTouchStart={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "#000",
                                        }
                                      }
                                    >
                                      <div
                                        aria-autocomplete="list"
                                        aria-expanded={false}
                                        aria-haspopup="true"
                                        className="ant-select-selection
                                                  ant-select-selection--single"
                                        key="selection"
                                        role="combobox"
                                      >
                                        <div
                                          className="ant-select-selection__rendered"
                                        >
                                          <div
                                            className="ant-select-selection__placeholder"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "WebkitUserSelect": "none",
                                                "display": "block",
                                                "userSelect": "none",
                                              }
                                            }
                                            unselectable="on"
                                          >
                                            Auto complete
                                          </div>
                                          <ul>
                                            <li
                                              className="ant-select-search ant-select-search--inline"
                                              key="__input"
                                            >
                                              <div
                                                className="ant-select-search__field__wrap"
                                              >
                                                <InputElement
                                                  className="ant-select-search__field"
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  prefixCls="ant-input"
                                                  type="text"
                                                  value=""
                                                >
                                                  <Input
                                                    className="ant-select-search__field"
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    prefixCls="ant-input"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="ant-input ant-select-search__field"
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </Input>
                                                </InputElement>
                                                <span
                                                  className="ant-select-search__field__mirror"
                                                >
                                                   
                                                </span>
                                              </div>
                                            </li>
                                          </ul>
                                        </div>
                                        <span
                                          className="ant-select-arrow"
                                          key="arrow"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "WebkitUserSelect": "none",
                                              "userSelect": "none",
                                            }
                                          }
                                          unselectable="on"
                                        >
                                          <b />
                                        </span>
                                      </div>
                                    </div>
                                  </Trigger>
                                </SelectTrigger>
                              </Select>
                            </LocaleReceiver>
                          </Select>
                        </AutoComplete>
                      </span>
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="help"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      />
                    </div>
                  </div>
                </Col>
              </div>
            </Row>
          </FormItem>
        </div>
      </CustomAutoComplete>
      <button
        type="submit"
      />
    </form>
  </Form>
</TestForm>
`;

exports[`Auto complete with no label should match snapshot 1`] = `
<TestForm
  input={
    Object {
      "onChange": [Function],
      "value": undefined,
    }
  }
  meta={
    Object {
      "error": "",
      "touched": false,
      "warning": "",
    }
  }
  onSubmit={[Function]}
>
  <Form
    hideRequiredMark={false}
    layout="horizontal"
    onSubmit={[Function]}
    prefixCls="ant-form"
  >
    <form
      className="ant-form ant-form-horizontal"
      onSubmit={[Function]}
    >
      <CustomAutoComplete
        dataSource={Array []}
        handleSearch={[Function]}
        helpMessage="help"
        input={
          Object {
            "onChange": [Function],
            "value": undefined,
          }
        }
        label=""
        meta={
          Object {
            "error": "",
            "touched": false,
            "warning": "",
          }
        }
        onChange={[Function]}
        onSelect={[Function]}
        placeHolder="Auto complete"
        style={
          Object {
            "backgroundColor": "#000",
          }
        }
      >
        <div
          className="customfield"
        >
          <FormItem
            className="customfield__form-item"
            colon={true}
            hasFeedback={false}
            help=""
            label=""
            prefixCls="ant-form"
            validateStatus=""
          >
            <Row
              className="ant-form-item customfield__form-item"
              gutter={0}
            >
              <div
                className="ant-row ant-form-item customfield__form-item"
              >
                <Col
                  className="ant-form-item-control-wrapper"
                  key=".$wrapper"
                >
                  <div
                    className="ant-form-item-control-wrapper"
                  >
                    <div
                      className="ant-form-item-control"
                    >
                      <span
                        className="ant-form-item-children"
                      >
                        <AutoComplete
                          choiceTransitionName="zoom"
                          dataSource={Array []}
                          filterOption={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onSearch={[Function]}
                          onSelect={[Function]}
                          optionLabelProp="children"
                          placeholder="Auto complete"
                          prefixCls="ant-select"
                          showSearch={false}
                          style={
                            Object {
                              "backgroundColor": "#000",
                            }
                          }
                          transitionName="slide-up"
                        >
                          <Select
                            choiceTransitionName="zoom"
                            className="ant-select-show-search ant-select-auto-complete"
                            dataSource={Array []}
                            filterOption={false}
                            getInputElement={[Function]}
                            mode="combobox"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionLabelProp="children"
                            placeholder="Auto complete"
                            prefixCls="ant-select"
                            showSearch={false}
                            style={
                              Object {
                                "backgroundColor": "#000",
                              }
                            }
                            transitionName="slide-up"
                          >
                            <LocaleReceiver
                              componentName="Select"
                              defaultLocale={
                                Object {
                                  "notFoundContent": "Not Found",
                                }
                              }
                            >
                              <Select
                                allowClear={false}
                                autoClearSearchValue={true}
                                backfill={false}
                                choiceTransitionName="zoom"
                                className="ant-select-show-search ant-select-auto-complete"
                                combobox={true}
                                dataSource={Array []}
                                defaultActiveFirstOption={true}
                                defaultOpen={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                filterOption={false}
                                getInputElement={[Function]}
                                labelInValue={false}
                                multiple={false}
                                notFoundContent={null}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDeselect={[Function]}
                                onFocus={[Function]}
                                onInputKeyDown={[Function]}
                                onSearch={[Function]}
                                onSelect={[Function]}
                                optionFilterProp="value"
                                optionLabelProp="children"
                                placeholder="Auto complete"
                                prefixCls="ant-select"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showArrow={true}
                                showSearch={false}
                                style={
                                  Object {
                                    "backgroundColor": "#000",
                                  }
                                }
                                tags={false}
                                tokenSeparators={Array []}
                                transitionName="slide-up"
                              >
                                <SelectTrigger
                                  combobox={true}
                                  defaultActiveFirstOption={true}
                                  dropdownMatchSelectWidth={true}
                                  dropdownMenuStyle={Object {}}
                                  dropdownStyle={Object {}}
                                  inputValue=""
                                  multiple={false}
                                  onDropdownVisibleChange={[Function]}
                                  onMenuDeselect={[Function]}
                                  onMenuSelect={[Function]}
                                  onPopupFocus={[Function]}
                                  options={Array []}
                                  prefixCls="ant-select"
                                  showAction={
                                    Array [
                                      "click",
                                    ]
                                  }
                                  showSearch={false}
                                  transitionName="slide-up"
                                  value={Array []}
                                  visible={false}
                                >
                                  <Trigger
                                    action={Array []}
                                    afterPopupVisibleChange={[Function]}
                                    blurDelay={0.15}
                                    builtinPlacements={
                                      Object {
                                        "bottomLeft": Object {
                                          "offset": Array [
                                            0,
                                            4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tl",
                                            "bl",
                                          ],
                                        },
                                        "topLeft": Object {
                                          "offset": Array [
                                            0,
                                            -4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "bl",
                                            "tl",
                                          ],
                                        },
                                      }
                                    }
                                    combobox={true}
                                    defaultActiveFirstOption={true}
                                    defaultPopupVisible={false}
                                    destroyPopupOnHide={false}
                                    dropdownMatchSelectWidth={true}
                                    dropdownMenuStyle={Object {}}
                                    dropdownStyle={Object {}}
                                    focusDelay={0}
                                    getDocument={[Function]}
                                    getPopupClassNameFromAlign={[Function]}
                                    hideAction={
                                      Array [
                                        "blur",
                                      ]
                                    }
                                    inputValue=""
                                    mask={false}
                                    maskClosable={true}
                                    mouseEnterDelay={0}
                                    mouseLeaveDelay={0.1}
                                    multiple={false}
                                    onDropdownVisibleChange={[Function]}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupAlign={[Function]}
                                    onPopupVisibleChange={[Function]}
                                    options={Array []}
                                    popup={
                                      <DropdownMenu
                                        backfillValue={undefined}
                                        defaultActiveFirstOption={true}
                                        dropdownMenuStyle={Object {}}
                                        firstActiveValue={undefined}
                                        inputValue=""
                                        menuItems={Array []}
                                        multiple={false}
                                        onMenuDeselect={[Function]}
                                        onMenuSelect={[Function]}
                                        onPopupFocus={[Function]}
                                        onPopupScroll={undefined}
                                        prefixCls="ant-select-dropdown"
                                        value={Array []}
                                        visible={false}
                                      />
                                    }
                                    popupAlign={Object {}}
                                    popupClassName="ant-select-dropdown--single"
                                    popupPlacement="bottomLeft"
                                    popupStyle={Object {}}
                                    popupTransitionName="slide-up"
                                    popupVisible={false}
                                    prefixCls="ant-select-dropdown"
                                    showAction={
                                      Array [
                                        "click",
                                      ]
                                    }
                                    showSearch={false}
                                    transitionName="slide-up"
                                    value={Array []}
                                    visible={false}
                                  >
                                    <div
                                      className="ant-select-show-search ant-select-auto-complete ant-select ant-select-combobox ant-select-enabled"
                                      key="trigger"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onTouchStart={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "#000",
                                        }
                                      }
                                    >
                                      <div
                                        aria-autocomplete="list"
                                        aria-expanded={false}
                                        aria-haspopup="true"
                                        className="ant-select-selection
                                                  ant-select-selection--single"
                                        key="selection"
                                        role="combobox"
                                      >
                                        <div
                                          className="ant-select-selection__rendered"
                                        >
                                          <div
                                            className="ant-select-selection__placeholder"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "WebkitUserSelect": "none",
                                                "display": "block",
                                                "userSelect": "none",
                                              }
                                            }
                                            unselectable="on"
                                          >
                                            Auto complete
                                          </div>
                                          <ul>
                                            <li
                                              className="ant-select-search ant-select-search--inline"
                                              key="__input"
                                            >
                                              <div
                                                className="ant-select-search__field__wrap"
                                              >
                                                <InputElement
                                                  className="ant-select-search__field"
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  prefixCls="ant-input"
                                                  type="text"
                                                  value=""
                                                >
                                                  <Input
                                                    className="ant-select-search__field"
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    prefixCls="ant-input"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="ant-input ant-select-search__field"
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </Input>
                                                </InputElement>
                                                <span
                                                  className="ant-select-search__field__mirror"
                                                >
                                                   
                                                </span>
                                              </div>
                                            </li>
                                          </ul>
                                        </div>
                                        <span
                                          className="ant-select-arrow"
                                          key="arrow"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "WebkitUserSelect": "none",
                                              "userSelect": "none",
                                            }
                                          }
                                          unselectable="on"
                                        >
                                          <b />
                                        </span>
                                      </div>
                                    </div>
                                  </Trigger>
                                </SelectTrigger>
                              </Select>
                            </LocaleReceiver>
                          </Select>
                        </AutoComplete>
                      </span>
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="help"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      />
                    </div>
                  </div>
                </Col>
              </div>
            </Row>
          </FormItem>
          <FontAwesomeIcon$1
            border={false}
            className="customfield__help"
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  448,
                  512,
                  Array [],
                  "f2fd",
                  "M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 430c-25.365 0-46-20.636-46-46 0-25.365 20.635-46 46-46s46 20.635 46 46c0 25.364-20.635 46-46 46zm40-131.333V300c0 6.627-5.373 12-12 12h-56c-6.627 0-12-5.373-12-12v-4c0-41.059 31.128-57.472 54.652-70.66 20.171-11.309 32.534-19 32.534-33.976 0-19.81-25.269-32.958-45.698-32.958-27.19 0-39.438 13.139-57.303 35.797-4.045 5.13-11.46 6.069-16.665 2.122l-34.699-26.31c-5.068-3.843-6.251-10.972-2.715-16.258C141.4 112.957 176.158 90 230.655 90c56.366 0 116.531 43.998 116.531 102 0 77.02-83.186 78.205-83.186 106.667z",
                ],
                "iconName": "question-square",
                "prefix": "fas",
              }
            }
            listItem={false}
            mask={null}
            name=""
            onClick={[Function]}
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={false}
            symbol={false}
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-square fa-w-14 fa-2x customfield__help"
              data-icon="question-square"
              data-prefix="fas"
              onClick={[Function]}
              role="img"
              style={Object {}}
              viewBox="0 0 448 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 430c-25.365 0-46-20.636-46-46 0-25.365 20.635-46 46-46s46 20.635 46 46c0 25.364-20.635 46-46 46zm40-131.333V300c0 6.627-5.373 12-12 12h-56c-6.627 0-12-5.373-12-12v-4c0-41.059 31.128-57.472 54.652-70.66 20.171-11.309 32.534-19 32.534-33.976 0-19.81-25.269-32.958-45.698-32.958-27.19 0-39.438 13.139-57.303 35.797-4.045 5.13-11.46 6.069-16.665 2.122l-34.699-26.31c-5.068-3.843-6.251-10.972-2.715-16.258C141.4 112.957 176.158 90 230.655 90c56.366 0 116.531 43.998 116.531 102 0 77.02-83.186 78.205-83.186 106.667z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon$1>
        </div>
      </CustomAutoComplete>
      <button
        type="submit"
      />
    </form>
  </Form>
</TestForm>
`;

exports[`Auto complete without error should match snapshot 1`] = `
<TestForm
  input={
    Object {
      "change": [Function],
      "value": undefined,
    }
  }
  meta={
    Object {
      "error": "",
      "touched": false,
      "warning": "",
    }
  }
  onSubmit={[Function]}
>
  <Form
    hideRequiredMark={false}
    layout="horizontal"
    onSubmit={[Function]}
    prefixCls="ant-form"
  >
    <form
      className="ant-form ant-form-horizontal"
      onSubmit={[Function]}
    >
      <CustomAutoComplete
        dataSource={Array []}
        handleSearch={[Function]}
        helpMessage="help"
        input={
          Object {
            "change": [Function],
            "value": undefined,
          }
        }
        label="Label"
        meta={
          Object {
            "error": "",
            "touched": false,
            "warning": "",
          }
        }
        onChange={[Function]}
        onSelect={[Function]}
        placeHolder="Auto complete"
        style={
          Object {
            "backgroundColor": "#000",
          }
        }
      >
        <div
          className="customfield"
        >
          <FormItem
            className="customfield__form-item"
            colon={true}
            hasFeedback={false}
            help=""
            label="Label"
            prefixCls="ant-form"
            validateStatus=""
          >
            <Row
              className="ant-form-item customfield__form-item"
              gutter={0}
            >
              <div
                className="ant-row ant-form-item customfield__form-item"
              >
                <Col
                  className="ant-form-item-label"
                  key=".$label"
                >
                  <div
                    className="ant-form-item-label"
                  >
                    <label
                      className=""
                      htmlFor={null}
                      onClick={[Function]}
                      title="Label"
                    >
                      Label
                    </label>
                  </div>
                </Col>
                <Col
                  className="ant-form-item-control-wrapper"
                  key=".$wrapper"
                >
                  <div
                    className="ant-form-item-control-wrapper"
                  >
                    <div
                      className="ant-form-item-control"
                    >
                      <span
                        className="ant-form-item-children"
                      >
                        <AutoComplete
                          choiceTransitionName="zoom"
                          dataSource={Array []}
                          filterOption={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onSearch={[Function]}
                          onSelect={[Function]}
                          optionLabelProp="children"
                          placeholder="Auto complete"
                          prefixCls="ant-select"
                          showSearch={false}
                          style={
                            Object {
                              "backgroundColor": "#000",
                            }
                          }
                          transitionName="slide-up"
                        >
                          <Select
                            choiceTransitionName="zoom"
                            className="ant-select-show-search ant-select-auto-complete"
                            dataSource={Array []}
                            filterOption={false}
                            getInputElement={[Function]}
                            mode="combobox"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionLabelProp="children"
                            placeholder="Auto complete"
                            prefixCls="ant-select"
                            showSearch={false}
                            style={
                              Object {
                                "backgroundColor": "#000",
                              }
                            }
                            transitionName="slide-up"
                          >
                            <LocaleReceiver
                              componentName="Select"
                              defaultLocale={
                                Object {
                                  "notFoundContent": "Not Found",
                                }
                              }
                            >
                              <Select
                                allowClear={false}
                                autoClearSearchValue={true}
                                backfill={false}
                                choiceTransitionName="zoom"
                                className="ant-select-show-search ant-select-auto-complete"
                                combobox={true}
                                dataSource={Array []}
                                defaultActiveFirstOption={true}
                                defaultOpen={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                filterOption={false}
                                getInputElement={[Function]}
                                labelInValue={false}
                                multiple={false}
                                notFoundContent={null}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDeselect={[Function]}
                                onFocus={[Function]}
                                onInputKeyDown={[Function]}
                                onSearch={[Function]}
                                onSelect={[Function]}
                                optionFilterProp="value"
                                optionLabelProp="children"
                                placeholder="Auto complete"
                                prefixCls="ant-select"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showArrow={true}
                                showSearch={false}
                                style={
                                  Object {
                                    "backgroundColor": "#000",
                                  }
                                }
                                tags={false}
                                tokenSeparators={Array []}
                                transitionName="slide-up"
                              >
                                <SelectTrigger
                                  combobox={true}
                                  defaultActiveFirstOption={true}
                                  dropdownMatchSelectWidth={true}
                                  dropdownMenuStyle={Object {}}
                                  dropdownStyle={Object {}}
                                  inputValue=""
                                  multiple={false}
                                  onDropdownVisibleChange={[Function]}
                                  onMenuDeselect={[Function]}
                                  onMenuSelect={[Function]}
                                  onPopupFocus={[Function]}
                                  options={Array []}
                                  prefixCls="ant-select"
                                  showAction={
                                    Array [
                                      "click",
                                    ]
                                  }
                                  showSearch={false}
                                  transitionName="slide-up"
                                  value={Array []}
                                  visible={false}
                                >
                                  <Trigger
                                    action={Array []}
                                    afterPopupVisibleChange={[Function]}
                                    blurDelay={0.15}
                                    builtinPlacements={
                                      Object {
                                        "bottomLeft": Object {
                                          "offset": Array [
                                            0,
                                            4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tl",
                                            "bl",
                                          ],
                                        },
                                        "topLeft": Object {
                                          "offset": Array [
                                            0,
                                            -4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 0,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "bl",
                                            "tl",
                                          ],
                                        },
                                      }
                                    }
                                    combobox={true}
                                    defaultActiveFirstOption={true}
                                    defaultPopupVisible={false}
                                    destroyPopupOnHide={false}
                                    dropdownMatchSelectWidth={true}
                                    dropdownMenuStyle={Object {}}
                                    dropdownStyle={Object {}}
                                    focusDelay={0}
                                    getDocument={[Function]}
                                    getPopupClassNameFromAlign={[Function]}
                                    hideAction={
                                      Array [
                                        "blur",
                                      ]
                                    }
                                    inputValue=""
                                    mask={false}
                                    maskClosable={true}
                                    mouseEnterDelay={0}
                                    mouseLeaveDelay={0.1}
                                    multiple={false}
                                    onDropdownVisibleChange={[Function]}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupAlign={[Function]}
                                    onPopupVisibleChange={[Function]}
                                    options={Array []}
                                    popup={
                                      <DropdownMenu
                                        backfillValue={undefined}
                                        defaultActiveFirstOption={true}
                                        dropdownMenuStyle={Object {}}
                                        firstActiveValue={undefined}
                                        inputValue=""
                                        menuItems={Array []}
                                        multiple={false}
                                        onMenuDeselect={[Function]}
                                        onMenuSelect={[Function]}
                                        onPopupFocus={[Function]}
                                        onPopupScroll={undefined}
                                        prefixCls="ant-select-dropdown"
                                        value={Array []}
                                        visible={false}
                                      />
                                    }
                                    popupAlign={Object {}}
                                    popupClassName="ant-select-dropdown--single"
                                    popupPlacement="bottomLeft"
                                    popupStyle={Object {}}
                                    popupTransitionName="slide-up"
                                    popupVisible={false}
                                    prefixCls="ant-select-dropdown"
                                    showAction={
                                      Array [
                                        "click",
                                      ]
                                    }
                                    showSearch={false}
                                    transitionName="slide-up"
                                    value={Array []}
                                    visible={false}
                                  >
                                    <div
                                      className="ant-select-show-search ant-select-auto-complete ant-select ant-select-combobox ant-select-enabled"
                                      key="trigger"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onTouchStart={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "#000",
                                        }
                                      }
                                    >
                                      <div
                                        aria-autocomplete="list"
                                        aria-expanded={false}
                                        aria-haspopup="true"
                                        className="ant-select-selection
                                                  ant-select-selection--single"
                                        key="selection"
                                        role="combobox"
                                      >
                                        <div
                                          className="ant-select-selection__rendered"
                                        >
                                          <div
                                            className="ant-select-selection__placeholder"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "WebkitUserSelect": "none",
                                                "display": "block",
                                                "userSelect": "none",
                                              }
                                            }
                                            unselectable="on"
                                          >
                                            Auto complete
                                          </div>
                                          <ul>
                                            <li
                                              className="ant-select-search ant-select-search--inline"
                                              key="__input"
                                            >
                                              <div
                                                className="ant-select-search__field__wrap"
                                              >
                                                <InputElement
                                                  className="ant-select-search__field"
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  prefixCls="ant-input"
                                                  type="text"
                                                  value=""
                                                >
                                                  <Input
                                                    className="ant-select-search__field"
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    prefixCls="ant-input"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="ant-input ant-select-search__field"
                                                      disabled={false}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </Input>
                                                </InputElement>
                                                <span
                                                  className="ant-select-search__field__mirror"
                                                >
                                                   
                                                </span>
                                              </div>
                                            </li>
                                          </ul>
                                        </div>
                                        <span
                                          className="ant-select-arrow"
                                          key="arrow"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "WebkitUserSelect": "none",
                                              "userSelect": "none",
                                            }
                                          }
                                          unselectable="on"
                                        >
                                          <b />
                                        </span>
                                      </div>
                                    </div>
                                  </Trigger>
                                </SelectTrigger>
                              </Select>
                            </LocaleReceiver>
                          </Select>
                        </AutoComplete>
                      </span>
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="help"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      />
                    </div>
                  </div>
                </Col>
              </div>
            </Row>
          </FormItem>
          <FontAwesomeIcon$1
            border={false}
            className="customfield__help"
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  448,
                  512,
                  Array [],
                  "f2fd",
                  "M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 430c-25.365 0-46-20.636-46-46 0-25.365 20.635-46 46-46s46 20.635 46 46c0 25.364-20.635 46-46 46zm40-131.333V300c0 6.627-5.373 12-12 12h-56c-6.627 0-12-5.373-12-12v-4c0-41.059 31.128-57.472 54.652-70.66 20.171-11.309 32.534-19 32.534-33.976 0-19.81-25.269-32.958-45.698-32.958-27.19 0-39.438 13.139-57.303 35.797-4.045 5.13-11.46 6.069-16.665 2.122l-34.699-26.31c-5.068-3.843-6.251-10.972-2.715-16.258C141.4 112.957 176.158 90 230.655 90c56.366 0 116.531 43.998 116.531 102 0 77.02-83.186 78.205-83.186 106.667z",
                ],
                "iconName": "question-square",
                "prefix": "fas",
              }
            }
            listItem={false}
            mask={null}
            name=""
            onClick={[Function]}
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={false}
            symbol={false}
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-square fa-w-14 fa-2x customfield__help"
              data-icon="question-square"
              data-prefix="fas"
              onClick={[Function]}
              role="img"
              style={Object {}}
              viewBox="0 0 448 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 430c-25.365 0-46-20.636-46-46 0-25.365 20.635-46 46-46s46 20.635 46 46c0 25.364-20.635 46-46 46zm40-131.333V300c0 6.627-5.373 12-12 12h-56c-6.627 0-12-5.373-12-12v-4c0-41.059 31.128-57.472 54.652-70.66 20.171-11.309 32.534-19 32.534-33.976 0-19.81-25.269-32.958-45.698-32.958-27.19 0-39.438 13.139-57.303 35.797-4.045 5.13-11.46 6.069-16.665 2.122l-34.699-26.31c-5.068-3.843-6.251-10.972-2.715-16.258C141.4 112.957 176.158 90 230.655 90c56.366 0 116.531 43.998 116.531 102 0 77.02-83.186 78.205-83.186 106.667z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon$1>
        </div>
      </CustomAutoComplete>
      <button
        type="submit"
      />
    </form>
  </Form>
</TestForm>
`;
