// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select Renders with group 1`] = `
<TestForm
  input={
    Object {
      "change": [Function],
      "value": undefined,
    }
  }
  meta={
    Object {
      "error": "",
      "touched": false,
      "warning": "",
    }
  }
  onSubmit={[Function]}
>
  <Form
    hideRequiredMark={false}
    layout="horizontal"
    onSubmit={[Function]}
    prefixCls="ant-form"
  >
    <form
      className="ant-form ant-form-horizontal"
      onSubmit={[Function]}
    >
      <CustomSelect
        allowClear={true}
        input={
          Object {
            "change": [Function],
            "value": undefined,
          }
        }
        label={null}
        meta={
          Object {
            "error": "",
            "touched": false,
            "warning": "",
          }
        }
        name="TestSelect"
        onChange={[Function]}
        options={
          Array [
            Object {
              "children": Array [
                Object {
                  "text": "option1",
                  "value": 1,
                },
              ],
              "group": true,
              "text": "group1",
            },
            Object {
              "text": "option2",
              "value": 2,
            },
          ]
        }
        placeHolder="Select..."
        required={true}
        style={Object {}}
      >
        <FormItem
          colon={true}
          hasFeedback={false}
          help=""
          label={null}
          prefixCls="ant-form"
          validateStatus=""
        >
          <Row
            className="ant-form-item"
            gutter={0}
          >
            <div
              className="ant-row ant-form-item"
            >
              <Col
                className="ant-form-item-control-wrapper"
                key=".$wrapper"
              >
                <div
                  className="ant-form-item-control-wrapper"
                >
                  <div
                    className="ant-form-item-control"
                  >
                    <span
                      className="ant-form-item-children"
                    >
                      <Select
                        allowClear={true}
                        choiceTransitionName="zoom"
                        onChange={[Function]}
                        placeholder="Select..."
                        prefixCls="ant-select"
                        showSearch={false}
                        style={Object {}}
                        transitionName="slide-up"
                      >
                        <LocaleReceiver
                          componentName="Select"
                          defaultLocale={
                            Object {
                              "notFoundContent": "Not Found",
                            }
                          }
                        >
                          <Select
                            allowClear={true}
                            backfill={false}
                            choiceTransitionName="zoom"
                            className=""
                            combobox={false}
                            defaultActiveFirstOption={true}
                            defaultOpen={false}
                            dropdownMatchSelectWidth={true}
                            dropdownMenuStyle={Object {}}
                            dropdownStyle={Object {}}
                            labelInValue={false}
                            multiple={false}
                            notFoundContent="Not Found"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDeselect={[Function]}
                            onFocus={[Function]}
                            onInputKeyDown={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionFilterProp="value"
                            optionLabelProp="children"
                            placeholder="Select..."
                            prefixCls="ant-select"
                            showAction={
                              Array [
                                "click",
                              ]
                            }
                            showArrow={true}
                            showSearch={false}
                            style={Object {}}
                            tags={false}
                            transitionName="slide-up"
                          >
                            <SelectTrigger
                              combobox={false}
                              defaultActiveFirstOption={true}
                              dropdownMatchSelectWidth={true}
                              dropdownMenuStyle={Object {}}
                              dropdownStyle={Object {}}
                              inputValue=""
                              multiple={false}
                              onDropdownVisibleChange={[Function]}
                              onMenuDeselect={[Function]}
                              onMenuSelect={[Function]}
                              onPopupFocus={[Function]}
                              options={Array []}
                              prefixCls="ant-select"
                              showAction={
                                Array [
                                  "click",
                                ]
                              }
                              showSearch={false}
                              transitionName="slide-up"
                              value={Array []}
                              visible={false}
                            >
                              <Trigger
                                action={Array []}
                                afterPopupVisibleChange={[Function]}
                                blurDelay={0.15}
                                builtinPlacements={
                                  Object {
                                    "bottomLeft": Object {
                                      "offset": Array [
                                        0,
                                        4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "tl",
                                        "bl",
                                      ],
                                    },
                                    "topLeft": Object {
                                      "offset": Array [
                                        0,
                                        -4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "bl",
                                        "tl",
                                      ],
                                    },
                                  }
                                }
                                combobox={false}
                                defaultActiveFirstOption={true}
                                defaultPopupVisible={false}
                                destroyPopupOnHide={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                focusDelay={0}
                                getDocument={[Function]}
                                getPopupClassNameFromAlign={[Function]}
                                hideAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                inputValue=""
                                mask={false}
                                maskClosable={true}
                                mouseEnterDelay={0}
                                mouseLeaveDelay={0.1}
                                multiple={false}
                                onDropdownVisibleChange={[Function]}
                                onMenuDeselect={[Function]}
                                onMenuSelect={[Function]}
                                onPopupAlign={[Function]}
                                onPopupVisibleChange={[Function]}
                                options={Array []}
                                popup={
                                  <DropdownMenu
                                    defaultActiveFirstOption={true}
                                    dropdownMenuStyle={Object {}}
                                    firstActiveValue={undefined}
                                    inputValue=""
                                    menuItems={Array []}
                                    multiple={false}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupFocus={[Function]}
                                    onPopupScroll={undefined}
                                    prefixCls="ant-select-dropdown"
                                    value={Array []}
                                    visible={false}
                                  />
                                }
                                popupAlign={Object {}}
                                popupClassName="ant-select-dropdown--single"
                                popupPlacement="bottomLeft"
                                popupStyle={Object {}}
                                popupTransitionName="slide-up"
                                popupVisible={false}
                                prefixCls="ant-select-dropdown"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showSearch={false}
                                transitionName="slide-up"
                                value={Array []}
                                visible={false}
                              >
                                <div
                                  className="ant-select ant-select-enabled ant-select-allow-clear"
                                  key="trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchStart={[Function]}
                                  style={Object {}}
                                >
                                  <div
                                    aria-autocomplete="list"
                                    aria-expanded={false}
                                    aria-haspopup="true"
                                    className="ant-select-selection
                                              ant-select-selection--single"
                                    key="selection"
                                    onKeyDown={[Function]}
                                    role="combobox"
                                    tabIndex={0}
                                  >
                                    <div
                                      className="ant-select-selection__rendered"
                                    >
                                      <div
                                        className="ant-select-selection__placeholder"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "WebkitUserSelect": "none",
                                            "display": "block",
                                            "userSelect": "none",
                                          }
                                        }
                                        unselectable="unselectable"
                                      >
                                        Select...
                                      </div>
                                    </div>
                                    <span
                                      className="ant-select-arrow"
                                      key="arrow"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "WebkitUserSelect": "none",
                                          "userSelect": "none",
                                        }
                                      }
                                      unselectable="unselectable"
                                    >
                                      <b />
                                    </span>
                                  </div>
                                </div>
                              </Trigger>
                            </SelectTrigger>
                          </Select>
                        </LocaleReceiver>
                      </Select>
                    </span>
                    <Animate
                      animation={Object {}}
                      component=""
                      componentProps={Object {}}
                      key="help"
                      onAppear={[Function]}
                      onEnd={[Function]}
                      onEnter={[Function]}
                      onLeave={[Function]}
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="show-help"
                    />
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </FormItem>
      </CustomSelect>
      <button
        type="submit"
      />
    </form>
  </Form>
</TestForm>
`;

exports[`Select Renders with no value 1`] = `
<TestForm
  input={
    Object {
      "change": [Function],
      "value": undefined,
    }
  }
  meta={
    Object {
      "error": "",
      "touched": false,
      "warning": "",
    }
  }
  onSubmit={[Function]}
>
  <Form
    hideRequiredMark={false}
    layout="horizontal"
    onSubmit={[Function]}
    prefixCls="ant-form"
  >
    <form
      className="ant-form ant-form-horizontal"
      onSubmit={[Function]}
    >
      <CustomSelect
        allowClear={true}
        input={
          Object {
            "change": [Function],
            "value": undefined,
          }
        }
        label={null}
        meta={
          Object {
            "error": "",
            "touched": false,
            "warning": "",
          }
        }
        name="TestSelect"
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "option1",
              "value": 1,
            },
            Object {
              "text": "option2",
              "value": 2,
            },
          ]
        }
        placeHolder="Select..."
        required={true}
        style={Object {}}
      >
        <FormItem
          colon={true}
          hasFeedback={false}
          help=""
          label={null}
          prefixCls="ant-form"
          validateStatus=""
        >
          <Row
            className="ant-form-item"
            gutter={0}
          >
            <div
              className="ant-row ant-form-item"
            >
              <Col
                className="ant-form-item-control-wrapper"
                key=".$wrapper"
              >
                <div
                  className="ant-form-item-control-wrapper"
                >
                  <div
                    className="ant-form-item-control"
                  >
                    <span
                      className="ant-form-item-children"
                    >
                      <Select
                        allowClear={true}
                        choiceTransitionName="zoom"
                        onChange={[Function]}
                        placeholder="Select..."
                        prefixCls="ant-select"
                        showSearch={false}
                        style={Object {}}
                        transitionName="slide-up"
                      >
                        <LocaleReceiver
                          componentName="Select"
                          defaultLocale={
                            Object {
                              "notFoundContent": "Not Found",
                            }
                          }
                        >
                          <Select
                            allowClear={true}
                            backfill={false}
                            choiceTransitionName="zoom"
                            className=""
                            combobox={false}
                            defaultActiveFirstOption={true}
                            defaultOpen={false}
                            dropdownMatchSelectWidth={true}
                            dropdownMenuStyle={Object {}}
                            dropdownStyle={Object {}}
                            labelInValue={false}
                            multiple={false}
                            notFoundContent="Not Found"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDeselect={[Function]}
                            onFocus={[Function]}
                            onInputKeyDown={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionFilterProp="value"
                            optionLabelProp="children"
                            placeholder="Select..."
                            prefixCls="ant-select"
                            showAction={
                              Array [
                                "click",
                              ]
                            }
                            showArrow={true}
                            showSearch={false}
                            style={Object {}}
                            tags={false}
                            transitionName="slide-up"
                          >
                            <SelectTrigger
                              combobox={false}
                              defaultActiveFirstOption={true}
                              dropdownMatchSelectWidth={true}
                              dropdownMenuStyle={Object {}}
                              dropdownStyle={Object {}}
                              inputValue=""
                              multiple={false}
                              onDropdownVisibleChange={[Function]}
                              onMenuDeselect={[Function]}
                              onMenuSelect={[Function]}
                              onPopupFocus={[Function]}
                              options={Array []}
                              prefixCls="ant-select"
                              showAction={
                                Array [
                                  "click",
                                ]
                              }
                              showSearch={false}
                              transitionName="slide-up"
                              value={Array []}
                              visible={false}
                            >
                              <Trigger
                                action={Array []}
                                afterPopupVisibleChange={[Function]}
                                blurDelay={0.15}
                                builtinPlacements={
                                  Object {
                                    "bottomLeft": Object {
                                      "offset": Array [
                                        0,
                                        4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "tl",
                                        "bl",
                                      ],
                                    },
                                    "topLeft": Object {
                                      "offset": Array [
                                        0,
                                        -4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "bl",
                                        "tl",
                                      ],
                                    },
                                  }
                                }
                                combobox={false}
                                defaultActiveFirstOption={true}
                                defaultPopupVisible={false}
                                destroyPopupOnHide={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                focusDelay={0}
                                getDocument={[Function]}
                                getPopupClassNameFromAlign={[Function]}
                                hideAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                inputValue=""
                                mask={false}
                                maskClosable={true}
                                mouseEnterDelay={0}
                                mouseLeaveDelay={0.1}
                                multiple={false}
                                onDropdownVisibleChange={[Function]}
                                onMenuDeselect={[Function]}
                                onMenuSelect={[Function]}
                                onPopupAlign={[Function]}
                                onPopupVisibleChange={[Function]}
                                options={Array []}
                                popup={
                                  <DropdownMenu
                                    defaultActiveFirstOption={true}
                                    dropdownMenuStyle={Object {}}
                                    firstActiveValue={undefined}
                                    inputValue=""
                                    menuItems={Array []}
                                    multiple={false}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupFocus={[Function]}
                                    onPopupScroll={undefined}
                                    prefixCls="ant-select-dropdown"
                                    value={Array []}
                                    visible={false}
                                  />
                                }
                                popupAlign={Object {}}
                                popupClassName="ant-select-dropdown--single"
                                popupPlacement="bottomLeft"
                                popupStyle={Object {}}
                                popupTransitionName="slide-up"
                                popupVisible={false}
                                prefixCls="ant-select-dropdown"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showSearch={false}
                                transitionName="slide-up"
                                value={Array []}
                                visible={false}
                              >
                                <div
                                  className="ant-select ant-select-enabled ant-select-allow-clear"
                                  key="trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchStart={[Function]}
                                  style={Object {}}
                                >
                                  <div
                                    aria-autocomplete="list"
                                    aria-expanded={false}
                                    aria-haspopup="true"
                                    className="ant-select-selection
                                              ant-select-selection--single"
                                    key="selection"
                                    onKeyDown={[Function]}
                                    role="combobox"
                                    tabIndex={0}
                                  >
                                    <div
                                      className="ant-select-selection__rendered"
                                    >
                                      <div
                                        className="ant-select-selection__placeholder"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "WebkitUserSelect": "none",
                                            "display": "block",
                                            "userSelect": "none",
                                          }
                                        }
                                        unselectable="unselectable"
                                      >
                                        Select...
                                      </div>
                                    </div>
                                    <span
                                      className="ant-select-arrow"
                                      key="arrow"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "WebkitUserSelect": "none",
                                          "userSelect": "none",
                                        }
                                      }
                                      unselectable="unselectable"
                                    >
                                      <b />
                                    </span>
                                  </div>
                                </div>
                              </Trigger>
                            </SelectTrigger>
                          </Select>
                        </LocaleReceiver>
                      </Select>
                    </span>
                    <Animate
                      animation={Object {}}
                      component=""
                      componentProps={Object {}}
                      key="help"
                      onAppear={[Function]}
                      onEnd={[Function]}
                      onEnter={[Function]}
                      onLeave={[Function]}
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="show-help"
                    />
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </FormItem>
      </CustomSelect>
      <button
        type="submit"
      />
    </form>
  </Form>
</TestForm>
`;

exports[`Select Submit error adds prop visualization queue 1`] = `
<TestForm
  input={
    Object {
      "change": [Function],
      "value": undefined,
    }
  }
  meta={
    Object {
      "error": "Error message",
      "touched": true,
      "warning": "",
    }
  }
  onSubmit={[Function]}
>
  <Form
    hideRequiredMark={false}
    layout="horizontal"
    onSubmit={[Function]}
    prefixCls="ant-form"
  >
    <form
      className="ant-form ant-form-horizontal"
      onSubmit={[Function]}
    >
      <CustomSelect
        allowClear={true}
        input={
          Object {
            "change": [Function],
            "value": undefined,
          }
        }
        label={null}
        meta={
          Object {
            "error": "Error message",
            "touched": true,
            "warning": "",
          }
        }
        name="TestSelect"
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "option1",
              "value": 1,
            },
            Object {
              "text": "option2",
              "value": 2,
            },
          ]
        }
        placeHolder="Select..."
        required={true}
        style={Object {}}
      >
        <FormItem
          colon={true}
          hasFeedback={false}
          help="Error message"
          label={null}
          prefixCls="ant-form"
          validateStatus="error"
        >
          <Row
            className="ant-form-item ant-form-item-with-help"
            gutter={0}
          >
            <div
              className="ant-row ant-form-item ant-form-item-with-help"
            >
              <Col
                className="ant-form-item-control-wrapper"
                key=".$wrapper"
              >
                <div
                  className="ant-form-item-control-wrapper"
                >
                  <div
                    className="ant-form-item-control has-error"
                  >
                    <span
                      className="ant-form-item-children"
                    >
                      <Select
                        allowClear={true}
                        choiceTransitionName="zoom"
                        onChange={[Function]}
                        placeholder="Select..."
                        prefixCls="ant-select"
                        showSearch={false}
                        style={Object {}}
                        transitionName="slide-up"
                      >
                        <LocaleReceiver
                          componentName="Select"
                          defaultLocale={
                            Object {
                              "notFoundContent": "Not Found",
                            }
                          }
                        >
                          <Select
                            allowClear={true}
                            backfill={false}
                            choiceTransitionName="zoom"
                            className=""
                            combobox={false}
                            defaultActiveFirstOption={true}
                            defaultOpen={false}
                            dropdownMatchSelectWidth={true}
                            dropdownMenuStyle={Object {}}
                            dropdownStyle={Object {}}
                            labelInValue={false}
                            multiple={false}
                            notFoundContent="Not Found"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDeselect={[Function]}
                            onFocus={[Function]}
                            onInputKeyDown={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionFilterProp="value"
                            optionLabelProp="children"
                            placeholder="Select..."
                            prefixCls="ant-select"
                            showAction={
                              Array [
                                "click",
                              ]
                            }
                            showArrow={true}
                            showSearch={false}
                            style={Object {}}
                            tags={false}
                            transitionName="slide-up"
                          >
                            <SelectTrigger
                              combobox={false}
                              defaultActiveFirstOption={true}
                              dropdownMatchSelectWidth={true}
                              dropdownMenuStyle={Object {}}
                              dropdownStyle={Object {}}
                              inputValue=""
                              multiple={false}
                              onDropdownVisibleChange={[Function]}
                              onMenuDeselect={[Function]}
                              onMenuSelect={[Function]}
                              onPopupFocus={[Function]}
                              options={Array []}
                              prefixCls="ant-select"
                              showAction={
                                Array [
                                  "click",
                                ]
                              }
                              showSearch={false}
                              transitionName="slide-up"
                              value={Array []}
                              visible={false}
                            >
                              <Trigger
                                action={Array []}
                                afterPopupVisibleChange={[Function]}
                                blurDelay={0.15}
                                builtinPlacements={
                                  Object {
                                    "bottomLeft": Object {
                                      "offset": Array [
                                        0,
                                        4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "tl",
                                        "bl",
                                      ],
                                    },
                                    "topLeft": Object {
                                      "offset": Array [
                                        0,
                                        -4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "bl",
                                        "tl",
                                      ],
                                    },
                                  }
                                }
                                combobox={false}
                                defaultActiveFirstOption={true}
                                defaultPopupVisible={false}
                                destroyPopupOnHide={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                focusDelay={0}
                                getDocument={[Function]}
                                getPopupClassNameFromAlign={[Function]}
                                hideAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                inputValue=""
                                mask={false}
                                maskClosable={true}
                                mouseEnterDelay={0}
                                mouseLeaveDelay={0.1}
                                multiple={false}
                                onDropdownVisibleChange={[Function]}
                                onMenuDeselect={[Function]}
                                onMenuSelect={[Function]}
                                onPopupAlign={[Function]}
                                onPopupVisibleChange={[Function]}
                                options={Array []}
                                popup={
                                  <DropdownMenu
                                    defaultActiveFirstOption={true}
                                    dropdownMenuStyle={Object {}}
                                    firstActiveValue={undefined}
                                    inputValue=""
                                    menuItems={Array []}
                                    multiple={false}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupFocus={[Function]}
                                    onPopupScroll={undefined}
                                    prefixCls="ant-select-dropdown"
                                    value={Array []}
                                    visible={false}
                                  />
                                }
                                popupAlign={Object {}}
                                popupClassName="ant-select-dropdown--single"
                                popupPlacement="bottomLeft"
                                popupStyle={Object {}}
                                popupTransitionName="slide-up"
                                popupVisible={false}
                                prefixCls="ant-select-dropdown"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showSearch={false}
                                transitionName="slide-up"
                                value={Array []}
                                visible={false}
                              >
                                <div
                                  className="ant-select ant-select-enabled ant-select-allow-clear"
                                  key="trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchStart={[Function]}
                                  style={Object {}}
                                >
                                  <div
                                    aria-autocomplete="list"
                                    aria-expanded={false}
                                    aria-haspopup="true"
                                    className="ant-select-selection
                                              ant-select-selection--single"
                                    key="selection"
                                    onKeyDown={[Function]}
                                    role="combobox"
                                    tabIndex={0}
                                  >
                                    <div
                                      className="ant-select-selection__rendered"
                                    >
                                      <div
                                        className="ant-select-selection__placeholder"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "WebkitUserSelect": "none",
                                            "display": "block",
                                            "userSelect": "none",
                                          }
                                        }
                                        unselectable="unselectable"
                                      >
                                        Select...
                                      </div>
                                    </div>
                                    <span
                                      className="ant-select-arrow"
                                      key="arrow"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "WebkitUserSelect": "none",
                                          "userSelect": "none",
                                        }
                                      }
                                      unselectable="unselectable"
                                    >
                                      <b />
                                    </span>
                                  </div>
                                </div>
                              </Trigger>
                            </SelectTrigger>
                          </Select>
                        </LocaleReceiver>
                      </Select>
                    </span>
                    <Animate
                      animation={Object {}}
                      component=""
                      componentProps={Object {}}
                      key="help"
                      onAppear={[Function]}
                      onEnd={[Function]}
                      onEnter={[Function]}
                      onLeave={[Function]}
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="show-help"
                    >
                      <AnimateChild
                        animation={Object {}}
                        key="help"
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      >
                        <div
                          className="ant-form-explain"
                          key="help"
                        >
                          Error message
                        </div>
                      </AnimateChild>
                    </Animate>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </FormItem>
      </CustomSelect>
      <button
        type="submit"
      />
    </form>
  </Form>
</TestForm>
`;
