// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tasks when updating should match snapshot 1`] = `
<React.Fragment>
  <main
    className="tasks"
  >
    <Status
      error={false}
      isUpdating={true}
      missing={false}
      taskNo={1}
    />
    <Refresh
      handleClick={[Function]}
      tooltip="Refresh status"
      tooltip-position="right"
    />
  </main>
  <Tasks
    closeModal={[Function]}
    modalContent="test"
    title="Test"
    visible={false}
  />
</React.Fragment>
`;

exports[`Tasks with error should match snapshot 1`] = `
<React.Fragment>
  <main
    className="tasks"
  >
    <Status
      error={true}
      isUpdating={false}
      missing={false}
      taskNo={1}
    />
    <Refresh
      handleClick={[Function]}
      tooltip="Refresh status"
      tooltip-position="right"
    />
  </main>
  <Tasks
    closeModal={[Function]}
    modalContent="test"
    title="Test"
    visible={false}
  />
</React.Fragment>
`;

exports[`Tasks with missing task should match snapshot 1`] = `
<React.Fragment>
  <main
    className="tasks"
  >
    <Status
      error={false}
      isUpdating={false}
      missing={true}
      taskNo={1}
    />
    <Refresh
      handleClick={[Function]}
      tooltip="Refresh status"
      tooltip-position="right"
    />
  </main>
  <Tasks
    closeModal={[Function]}
    modalContent="test"
    title="Test"
    visible={false}
  />
</React.Fragment>
`;

exports[`Tasks with no tasks should match snapshot 1`] = `
<React.Fragment>
  <main
    className="tasks"
  >
    <Status
      error={false}
      isUpdating={false}
      missing={false}
      taskNo={0}
    />
    <Refresh
      handleClick={[Function]}
      tooltip="Refresh status"
      tooltip-position="right"
    />
  </main>
  <Tasks
    closeModal={[Function]}
    modalContent="test"
    title="Test"
    visible={false}
  />
</React.Fragment>
`;

exports[`Tasks with tasks and no issues should match snapshot 1`] = `
<React.Fragment>
  <main
    className="tasks"
  >
    <Table
      cellHeight={50}
      columnOrder={
        Array [
          "date",
          "analysis",
          "status",
          "files",
        ]
      }
      columnTemplate="minmax(150px, 20%) minmax(150px, 20%) minmax(150px, 20%) minmax(250px, 40%)"
      columns={
        Array [
          Object {
            "name": "id",
          },
          Object {
            "name": "date",
          },
          Object {
            "name": "analysis",
          },
          Object {
            "name": "status",
          },
          Object {
            "name": "files",
          },
        ]
      }
      firstColumn={
        Object {
          "minWidth": 150,
          "name": "id",
          "width": 150,
        }
      }
      maxBodyWidth={700}
      rows={
        Array [
          Object {
            "analysis": Object {
              "content": undefined,
            },
            "date": Object {
              "content": "12:NaN am, undefined NaN, NaN",
            },
            "files": Object {
              "content": <Files
                changeFile={[Function]}
                downloadFolder={[Function]}
                files={Array []}
                id="task1"
                primaryFile={undefined}
                viewFile={[Function]}
        />,
            },
            "id": Object {
              "content": "task1",
            },
            "status": Object {
              "content": <span
                className="tasks__running"
        >
                <FontAwesomeIcon$1
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                                Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f110",
                                          "M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z",
                                        ],
                                        "iconName": "spinner",
                                        "prefix": "fas",
                                      }
                        }
                        listItem={false}
                        mask={null}
                        name=""
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={true}
                        symbol={false}
                        transform={null}
                />
                running
        </span>,
            },
          },
        ]
      }
    />
    <Refresh
      handleClick={[Function]}
      tooltip="Refresh status"
      tooltip-position="right"
    />
  </main>
  <Tasks
    closeModal={[Function]}
    modalContent="test"
    title="Test"
    visible={false}
  />
</React.Fragment>
`;
